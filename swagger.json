{
  "swagger" : "2.0",
  "info" : {
    "version" : "v2",
    "title" : "PrintSmart REST API"
  },
  "host" : "api.printsmart.com",
  "basePath" : "/web/v1",
  "schemes" : [ "https" ],
  "security" : [ {
    "apiKeyHeader" : [ ],
    "oauth2" : [ ]
  } ],
  "paths" : {
    "/account/register" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Register a PrintSmart User.",
        "description" : "Registers the user with PrintSmart.",
        "operationId" : "register",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "userModel",
          "in" : "body",
          "description" : "The user to register.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "BadRequest"
          }
        }
      }
    },
    "/account/change-password" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "change-password.",
        "operationId" : "password-change",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "value",
          "in" : "body",
          "description" : "The password\r\n                                                                                           reset model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangePasswordRequestModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BooleanResponse"
            }
          },
          "400" : {
            "description" : "BadRequest",
            "schema" : {
              "$ref" : "#/definitions/ApiError"
            }
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/account/forgot-password" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "forgot-password.",
        "operationId" : "forgot-password",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "request",
          "in" : "body",
          "description" : "The password\r\n                                                                                           reset model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ForgotPasswordRequestModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BooleanResponse"
            }
          },
          "404" : {
            "description" : "NotFound",
            "schema" : {
              "$ref" : "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/account/reset-password/{token}" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "reset-password.",
        "operationId" : "reset-password",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "The valid token to reset the password",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "request",
          "in" : "body",
          "description" : "The password\r\n                                                                                           reset model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResetPasswordRequestModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BooleanResponse"
            }
          },
          "404" : {
            "description" : "NotFound",
            "schema" : {
              "$ref" : "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/account/add-contact" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "contact-add",
        "operationId" : "contact-add",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "contact",
          "in" : "body",
          "description" : "A ContactDto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StringResponse"
            }
          },
          "400" : {
            "description" : "BadRequest",
            "schema" : {
              "$ref" : "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/account/update-contact" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "contact-update",
        "operationId" : "update-contact",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "contact",
          "in" : "body",
          "description" : "Contact data.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContactDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BooleanResponse"
            }
          },
          "400" : {
            "description" : "BadRequest",
            "schema" : {
              "$ref" : "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/addresses/search/{address}" : {
      "get" : {
        "tags" : [ "Address" ],
        "summary" : "Search for address.",
        "operationId" : "address-search",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "address",
          "in" : "path",
          "description" : "String address to search",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AddressSearchResponse"
            }
          },
          "404" : {
            "description" : "NotFound",
            "schema" : {
              "$ref" : "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/carts/{id}" : {
      "get" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-by-id",
        "description" : "(Restricted to Logged in users) gets the shopping result using the given identifier.",
        "operationId" : "cart-by-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The cart GUID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ShopCartResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/customer/{id}" : {
      "get" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-by-customer-id",
        "operationId" : "cart-by-customer-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The customer id eg. SL12345.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ShopCartResponse"
            }
          },
          "400" : {
            "description" : "BadRequest",
            "schema" : {
              "$ref" : "#/definitions/ApiError"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/{id}/items" : {
      "get" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-items-by-id",
        "description" : "",
        "operationId" : "cart-items-by-cart-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The shopping cart GUID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ShopCartItemCollectionResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/create" : {
      "post" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-create",
        "description" : "Creates a Shopping cart for a the current user.",
        "operationId" : "cart-create",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/StringResponse"
            }
          },
          "304" : {
            "description" : "NotModified"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/{id}/delete" : {
      "delete" : {
        "tags" : [ "Carts" ],
        "summary" : "delete-cart",
        "description" : "Delete the cart",
        "operationId" : "cart-delete",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The cart GUID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StringResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/{id}/add" : {
      "post" : {
        "tags" : [ "Carts" ],
        "summary" : "add-cart-item",
        "description" : "Adds a ShopCart Item",
        "operationId" : "cart-add-item",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Shop Cart GUID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "model",
          "in" : "body",
          "description" : "The item to add to the shopping cart.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShopCartItemDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/GuidResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/{id}/update" : {
      "put" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-update-item",
        "description" : "",
        "operationId" : "cart-update-item",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "model",
          "in" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShopCartItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/StringResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/{cartId}/item/{itemId}" : {
      "delete" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-remove-item",
        "operationId" : "cart-remove-tem",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "cartId",
          "in" : "path",
          "description" : "The Cart GUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemId",
          "in" : "path",
          "description" : "The Item GUID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StringResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/{id}/checkout" : {
      "post" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-checkout",
        "description" : "Checkout the cart by guid",
        "operationId" : "cart-checkout",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the cart to checkout.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "checkoutRequest",
          "in" : "body",
          "description" : "The Payment Details of the Card.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CheckoutRequestModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CheckoutCartResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/carts/{id}/calculate" : {
      "post" : {
        "tags" : [ "Carts" ],
        "summary" : "cart-calculate",
        "description" : "",
        "operationId" : "cart-calculate",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The cart guid",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CheckoutResult"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/content/home" : {
      "get" : {
        "tags" : [ "Content" ],
        "summary" : "Gets the homepage Contentful item",
        "description" : "Larry Rivera, 8/21/2018.",
        "operationId" : "Content_GetHome",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ContentfulResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/customers" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "get-customers",
        "description" : "Get list of customers belonging to the caller Member Account",
        "operationId" : "get-customers",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaginatedCustomersResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/customers/{id}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "customer-by-id",
        "operationId" : "customer-by-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SL Account Number",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CustomerProfileResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Customers" ],
        "summary" : "update-customer",
        "description" : "Puts the customer profile completing the sign-up process",
        "operationId" : "customer-update",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SL Account Number.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "body",
          "description" : "The user ProfileInfo",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerProfileModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "delete-customer",
        "operationId" : "delete-customer",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/customers/{id}/payment-profiles" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "get-payment-profiles",
        "description" : "Gets authorize.net  customer payment profile.",
        "operationId" : "get-payment-profiles",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SL Account Number.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentProfileResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Customers" ],
        "summary" : "update-payment-profile",
        "description" : "Updates authorize.net  customer payment profile.",
        "operationId" : "update-payment-profiles",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SL Account Number.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "request",
          "in" : "body",
          "description" : "Customer profile id and Customer payment profile id to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeletePaymentProfileRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentProfileResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "add-payment-profile",
        "description" : "Larry Rivera, 4/9/2019.",
        "operationId" : "add-payment-profile",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SL Account Number.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "customerPaymentProfileRequest",
          "in" : "body",
          "description" : "The customer.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddPaymentProfileRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CustomerPaymentProfile"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "payment-profile-delete",
        "description" : "Deletes the customer payment profile.",
        "operationId" : "payment-profile-delete",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "SL Account Number.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeletePaymentProfileRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BooleanResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/customers/email" : {
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "get-by-email",
        "description" : "Results filtered by MemberId Request",
        "operationId" : "get-by-email",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "request",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerByEmailRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/customers/{id}/orders" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "order-customer-id",
        "operationId" : "GetCustomerOrders",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Customer Id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InvoiceCollectionResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/customers/project-manager" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "project-manager",
        "description" : "",
        "operationId" : "project-manager-get",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccountRepResponse"
            }
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/customers/{id}/addresses" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "saved-addresses-get",
        "description" : "",
        "operationId" : "get-saved-addresses",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AddressCollectionResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "saved-address-add",
        "description" : "",
        "operationId" : "saved-address-add",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "address",
          "in" : "body",
          "description" : "The address to save",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SaveAddressRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AddressResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/customers/{id}/addresses/{addressId}" : {
      "put" : {
        "tags" : [ "Customers" ],
        "summary" : "saved-address-update",
        "description" : "",
        "operationId" : "saved-address-update",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "addressId",
          "in" : "path",
          "description" : "The id of the saved address",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "address",
          "in" : "body",
          "description" : "The address to save",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SaveAddressRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AddressResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "saved-address-delete",
        "description" : "",
        "operationId" : "saved-address-delete",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "addressId",
          "in" : "path",
          "description" : "The id of the saved address",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BooleanResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/members" : {
      "get" : {
        "tags" : [ "Members" ],
        "summary" : "members-get",
        "description" : "Get PrintSmart Members.",
        "operationId" : "members-get",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MemberCollectionResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Members" ],
        "summary" : "member-update",
        "operationId" : "members-update",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The member id to update.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "member",
          "in" : "body",
          "description" : "The new member data.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddMemberRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MemberResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      },
      "post" : {
        "tags" : [ "Members" ],
        "summary" : "members-add",
        "operationId" : "members-add",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "member",
          "in" : "body",
          "description" : "The new member data.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddMemberRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MemberResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Members" ],
        "summary" : "members-delete",
        "operationId" : "members-delete",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The member id to update.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MemberResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/members/{id}" : {
      "get" : {
        "tags" : [ "Members" ],
        "summary" : "member-by-id",
        "description" : "PrintSmart Member by id.",
        "operationId" : "members-by-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The member id.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MemberResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/members/{id}/merchantPublicKey" : {
      "get" : {
        "tags" : [ "Members" ],
        "summary" : "member-by-id",
        "description" : "PrintSmart Member by id.",
        "operationId" : "members-client-key",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The member id.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StringResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/orders/{customerId}/completed" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "orders-completed",
        "description" : "Get Completed Orders",
        "operationId" : "orders-completed",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OrderHistoryResponse"
            }
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/orders/{customerId}/open" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "orders-open",
        "description" : "Get Open Orders",
        "operationId" : "orders-open",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OrderHistoryResponse"
            }
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/orders/{customerId}/stop" : {
      "post" : {
        "tags" : [ "Orders" ],
        "summary" : "job-stop",
        "description" : "Stop an active customer job\r\n            Valid ReasonId are:\r\n            <c>\r\n             1 - Need To adjust quantity\r\n             2 - Change Coating Type\r\n             3 - Modify Turnaround\r\n             4 - Replace/Upload New Files\r\n            -1 - Other\r\n            </c>",
        "operationId" : "orders-job-stop",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "The customer id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stopJobRequest",
          "in" : "body",
          "description" : "Request to stop a job",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StopJobRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BooleanResponse"
            }
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/Orders" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Orders for the authenticated user",
        "description" : "Bearer token authenticated customer orders",
        "operationId" : "orders-get",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Invoice"
              }
            }
          },
          "204" : {
            "description" : "NoContent"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/Partner/MRM/refresh" : {
      "post" : {
        "tags" : [ "Partner" ],
        "summary" : "Refresh The Token used to access marko rubel.",
        "operationId" : "Token",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/Partner/MRM/contact/{id}" : {
      "get" : {
        "tags" : [ "Partner" ],
        "summary" : "Partner Contact",
        "description" : "MarkoRubel InfusionSoft contact data",
        "operationId" : "GetContact",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "MarkoRubel InfusionSoft Contact Id.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/Partner/MRM/contact/tag" : {
      "post" : {
        "tags" : [ "Partner" ],
        "summary" : "Tags MRM with Dynamic Tag.",
        "operationId" : "TagContact",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "info",
          "in" : "body",
          "description" : "MRM Infusionsoft Contact/OrderInfo.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TagContactInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CreateTagResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/products/{id}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Product Details and Charges",
        "operationId" : "product-by-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Product Id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProductResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/products/{id}/variation" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get Product Variation Data",
        "operationId" : "product-variation-by-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Product Id with a variation suffix",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProductVariationResponse"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/shipping/{zipCode}/cart/{cartId}" : {
      "get" : {
        "tags" : [ "Shipping" ],
        "summary" : "Gives an delivery cart estimation using Fedex web services",
        "operationId" : "estimate-cart-shipping",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "cartId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "zipCode",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "BadRequest"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/shipping/{zipCode}" : {
      "post" : {
        "tags" : [ "Shipping" ],
        "summary" : "Estimate a item using the Fedex web services",
        "operationId" : "estimate-shipping",
        "consumes" : [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "zipCode",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "item",
          "in" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ShopCartItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "BadRequest"
          }
        },
        "security" : [ {
          "oauth2" : [ ]
        } ]
      }
    },
    "/workorder/{id}" : {
      "get" : {
        "tags" : [ "WorkOrders" ],
        "summary" : "Get a workorder by id",
        "operationId" : "workorder-by-id",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/WorkOrder"
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    },
    "/workorder/invoice/{id}" : {
      "get" : {
        "tags" : [ "WorkOrders" ],
        "summary" : "Get a list if workorders by invoice id",
        "operationId" : "workorder-by-invoice",
        "consumes" : [ ],
        "produces" : [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The invoice id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkOrder"
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "apiKeyHeader" : {
      "type" : "apiKey",
      "name" : "Ocp-Apim-Subscription-Key",
      "in" : "header"
    },
    "oauth2" : {
      "description" : "client credentials grant flow",
      "type" : "oauth2",
      "tokenUrl" : "https://us-01-api.printsmart.com/token",
      "flow" : "password"
    }
  },
  "definitions" : {
    "UserModel" : {
      "description" : "A data Model for the user.",
      "required" : [ "userName", "email", "firstName", "lastName", "password" ],
      "type" : "object",
      "properties" : {
        "userName" : {
          "description" : "Gets or sets the name of the user.",
          "type" : "string"
        },
        "email" : {
          "description" : "Gets or sets the email.",
          "type" : "string"
        },
        "firstName" : {
          "description" : "Gets or sets the person's first name.",
          "type" : "string"
        },
        "lastName" : {
          "description" : "Gets or sets the person's last name.",
          "type" : "string"
        },
        "password" : {
          "description" : "Gets or sets the password.",
          "maxLength" : 100,
          "minLength" : 6,
          "type" : "string"
        },
        "confirmPassword" : {
          "description" : "Gets or sets the confirm password.",
          "type" : "string"
        }
      }
    },
    "ChangePasswordRequestModel" : {
      "description" : "Model for Password Reset Request",
      "required" : [ "password", "confirmPassword" ],
      "type" : "object",
      "properties" : {
        "password" : {
          "description" : "Gets or sets the request Password field.",
          "maxLength" : 35,
          "minLength" : 8,
          "type" : "string"
        },
        "confirmPassword" : {
          "description" : "Gets or sets the ConfirmPassword field.",
          "maxLength" : 35,
          "minLength" : 8,
          "type" : "string"
        }
      }
    },
    "CancellationToken" : {
      "type" : "object",
      "properties" : {
        "isCancellationRequested" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "canBeCanceled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "waitHandle" : {
          "$ref" : "#/definitions/WaitHandle",
          "readOnly" : true
        }
      }
    },
    "WaitHandle" : {
      "type" : "object",
      "properties" : {
        "handle" : {
          "type" : "object"
        },
        "safeWaitHandle" : {
          "$ref" : "#/definitions/SafeWaitHandle"
        }
      }
    },
    "SafeWaitHandle" : {
      "type" : "object",
      "properties" : {
        "isInvalid" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "isClosed" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "BooleanResponse" : {
      "description" : "An API response yielding a boolean",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "boolean"
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "ApiError" : {
      "description" : "Api Error Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "The Data",
          "type" : "object"
        },
        "message" : {
          "description" : "The Error Message",
          "type" : "string"
        },
        "moreInfo" : {
          "description" : "Extended Information about the error",
          "type" : "string"
        },
        "code" : {
          "format" : "int32",
          "description" : "The Error Code",
          "type" : "integer"
        },
        "status" : {
          "description" : "The status of the request",
          "type" : "string"
        }
      }
    },
    "ForgotPasswordRequestModel" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        }
      }
    },
    "ResetPasswordRequestModel" : {
      "required" : [ "password", "confirmPassword" ],
      "type" : "object",
      "properties" : {
        "password" : {
          "maxLength" : 35,
          "minLength" : 8,
          "type" : "string"
        },
        "confirmPassword" : {
          "maxLength" : 35,
          "minLength" : 8,
          "type" : "string"
        }
      }
    },
    "ContactDto" : {
      "required" : [ "customerId", "email", "firstName", "lastName" ],
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string"
        },
        "contactId" : {
          "type" : "string"
        },
        "cellNo" : {
          "type" : "string"
        },
        "defaultContact" : {
          "format" : "int32",
          "type" : "integer"
        },
        "deliveryZip" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "fax" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "jobTitle" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "phoneExt" : {
          "type" : "string"
        },
        "prefix" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "slmnewsLetter" : {
          "format" : "int32",
          "type" : "integer"
        },
        "status" : {
          "type" : "string"
        },
        "suffix" : {
          "type" : "string"
        },
        "updatedBy" : {
          "type" : "string"
        }
      }
    },
    "StringResponse" : {
      "description" : "An API response yielding a string",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "string"
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "AddressSearchResponse" : {
      "description" : "Response for autocomplete search and Address validation",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AddressSearchResult",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "AddressSearchResult" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location"
          }
        }
      }
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "geometry" : {
          "$ref" : "#/definitions/Geometry"
        },
        "totalUnitCount" : {
          "format" : "int64",
          "type" : "integer"
        },
        "ranges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Range"
          }
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "formattedAddress" : {
          "type" : "string"
        },
        "mainAddressLine" : {
          "type" : "string"
        },
        "addressLastLine" : {
          "type" : "string"
        },
        "placeName" : {
          "type" : "string"
        },
        "areaName1" : {
          "type" : "string"
        },
        "areaName2" : {
          "type" : "string"
        },
        "areaName3" : {
          "type" : "string"
        },
        "areaName4" : {
          "type" : "string"
        },
        "postCode" : {
          "format" : "int64",
          "type" : "integer"
        },
        "postCodeExt" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "addressNumber" : {
          "format" : "int64",
          "type" : "integer"
        },
        "streetName" : {
          "type" : "string"
        },
        "unitType" : {
          "type" : "string"
        },
        "unitValue" : {
          "type" : "string"
        }
      }
    },
    "Geometry" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "coordinates" : {
          "type" : "array",
          "items" : {
            "format" : "double",
            "type" : "number"
          }
        }
      }
    },
    "Range" : {
      "type" : "object",
      "properties" : {
        "placeName" : {
          "type" : "string"
        },
        "units" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Unit"
          }
        }
      }
    },
    "Unit" : {
      "type" : "object",
      "properties" : {
        "unitInfo" : {
          "type" : "string"
        },
        "formattedUnitAddress" : {
          "type" : "string"
        }
      }
    },
    "ShopCartResponse" : {
      "description" : "An API response yielding a ShopCart",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ShopCart",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "ShopCart" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "open" : {
          "type" : "boolean"
        },
        "memberId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "createdOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "updatedOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "customerId" : {
          "type" : "string"
        },
        "contactId" : {
          "type" : "string"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "orderId" : {
          "type" : "string"
        },
        "total" : {
          "format" : "double",
          "type" : "number"
        },
        "tax" : {
          "format" : "double",
          "type" : "number"
        }
      }
    },
    "ShopCartItemCollectionResponse" : {
      "description" : "An API response yielding a collection of ShopCartItem",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ShopCartItem"
          }
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "ShopCartItem" : {
      "type" : "object",
      "properties" : {
        "sku" : {
          "type" : "string"
        },
        "id" : {
          "format" : "uuid",
          "type" : "string",
          "example" : "00000000-0000-0000-0000-000000000000"
        },
        "itemId" : {
          "format" : "uuid",
          "type" : "string",
          "example" : "00000000-0000-0000-0000-000000000000"
        },
        "productId" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "chargeIds" : {
          "type" : "string"
        },
        "optionIds" : {
          "type" : "string"
        },
        "quantity" : {
          "format" : "int32",
          "type" : "integer"
        },
        "height" : {
          "format" : "double",
          "type" : "number"
        },
        "width" : {
          "format" : "double",
          "type" : "number"
        },
        "cost" : {
          "format" : "double",
          "type" : "number"
        },
        "turnaround" : {
          "type" : "string"
        },
        "proofs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "hiRes" : {
          "type" : "string"
        },
        "stateId" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "configurator" : {
          "$ref" : "#/definitions/ShopCartItemConfigurator"
        },
        "createdOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "updatedOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "isTaxable" : {
          "type" : "boolean"
        }
      }
    },
    "ShopCartItemConfigurator" : {
      "type" : "object",
      "properties" : {
        "chargeCategories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChargeCategory"
          }
        },
        "quantities" : {
          "type" : "array",
          "items" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "turnarounds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ChargeCategory" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "order" : {
          "format" : "int64",
          "type" : "integer"
        },
        "selectMode" : {
          "enum" : [ "Single", "Multiple" ],
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "charges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Charge"
          }
        }
      }
    },
    "Charge" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "categoryId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "rank" : {
          "format" : "int64",
          "type" : "integer"
        },
        "exclusions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "formulaData" : {
          "type" : "string"
        }
      }
    },
    "ShopCartItemDto" : {
      "type" : "object",
      "properties" : {
        "numberOfSets" : {
          "format" : "int32",
          "type" : "integer"
        },
        "cartItem" : {
          "$ref" : "#/definitions/ShopCartItem"
        }
      }
    },
    "GuidResponse" : {
      "description" : "An API response yielding a GUID",
      "type" : "object",
      "properties" : {
        "data" : {
          "format" : "uuid",
          "description" : "Gets or sets The payload of the response.",
          "type" : "string",
          "example" : "00000000-0000-0000-0000-000000000000"
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "CheckoutRequestModel" : {
      "type" : "object",
      "properties" : {
        "customerPaymentProfileId" : {
          "type" : "string"
        },
        "cardCode" : {
          "type" : "string"
        },
        "nonceToken" : {
          "type" : "string"
        },
        "storePayment" : {
          "type" : "boolean"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "zipCode" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "billingSameAsShipping" : {
          "type" : "boolean"
        },
        "billingFirstName" : {
          "type" : "string"
        },
        "billingLastName" : {
          "type" : "string"
        },
        "billingAddress" : {
          "type" : "string"
        },
        "billingAddress2" : {
          "type" : "string"
        },
        "billingCity" : {
          "type" : "string"
        },
        "billingState" : {
          "type" : "string"
        },
        "billingZipCode" : {
          "type" : "string"
        },
        "sendEmails" : {
          "type" : "boolean"
        },
        "sendCatalog" : {
          "type" : "boolean"
        },
        "poNumber" : {
          "type" : "string"
        },
        "selfPickup" : {
          "type" : "boolean"
        }
      }
    },
    "CheckoutCartResponse" : {
      "description" : "A checkout cart response.",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/CheckoutResult",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "CheckoutResult" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "transactionId" : {
          "type" : "string"
        },
        "invoiceId" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "CartCalculationResult" : {
      "description" : "Encapsulates the result of a cart calculation.",
      "type" : "object",
      "properties" : {
        "subtotal" : {
          "format" : "double",
          "description" : "Gets or sets the subtotal.",
          "type" : "number"
        },
        "tax" : {
          "format" : "double",
          "description" : "Gets or sets the tax.",
          "type" : "number"
        },
        "total" : {
          "format" : "double",
          "description" : "Gets or sets the number of.",
          "type" : "number"
        }
      }
    },
    "ContentfulResponse" : {
      "description" : "A ContenfulPageModel API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ContentPageModel",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "ContentPageModel" : {
      "description" : "Model for a Contentful ContentPage",
      "type" : "object",
      "properties" : {
        "carousel" : {
          "description" : "The Carousel Element",
          "type" : "string"
        },
        "grid" : {
          "description" : "The Grid Elements",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PaginatedCustomersResponse" : {
      "description" : "A paginated CustomerViewModel Response",
      "type" : "object",
      "properties" : {
        "pagination" : {
          "$ref" : "#/definitions/Pagination",
          "description" : "Gets or sets the pagination of the results."
        },
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomerViewModel"
          }
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "Pagination" : {
      "description" : "Api Results Pagination",
      "type" : "object",
      "properties" : {
        "page" : {
          "format" : "int32",
          "description" : "Gets or sets the page of date to get based on the page size.",
          "type" : "integer"
        },
        "pageSize" : {
          "format" : "int32",
          "description" : "Gets or sets The number of rows to return per request.",
          "type" : "integer"
        },
        "total" : {
          "format" : "int32",
          "description" : "Gets or sets the total number of rows available.",
          "type" : "integer"
        }
      }
    },
    "CustomerViewModel" : {
      "description" : "Smartlevels Customer View Model",
      "type" : "object",
      "properties" : {
        "customerId" : {
          "description" : "The SL Account Number",
          "type" : "string"
        },
        "contactId" : {
          "description" : "The CT Default Account Contact Number",
          "type" : "string"
        },
        "companyName" : {
          "description" : "Company Name",
          "type" : "string"
        },
        "firstName" : {
          "description" : "The First Name of the Account Default Contact",
          "type" : "string"
        },
        "lastName" : {
          "description" : "The First Name of the Account Default Contact",
          "type" : "string"
        },
        "phone" : {
          "description" : "The Phone of the Account Default Contact",
          "type" : "string"
        },
        "mobilePhone" : {
          "description" : "The Mobile Phone of the Account Default Contact",
          "type" : "string"
        },
        "email" : {
          "description" : "The Email Phone of the Account Default Contact",
          "type" : "string"
        },
        "address" : {
          "description" : "The address of the company",
          "type" : "string"
        },
        "address2" : {
          "description" : "Address 2nd Line",
          "type" : "string"
        },
        "city" : {
          "description" : "City",
          "type" : "string"
        },
        "state" : {
          "description" : "State Code",
          "type" : "string"
        },
        "zipCode" : {
          "description" : "The Zipcode",
          "type" : "string"
        },
        "country" : {
          "description" : "The Country Code",
          "type" : "string"
        },
        "loginId" : {
          "description" : "Login ID is email field",
          "type" : "string"
        },
        "status" : {
          "description" : "Success of the Account",
          "type" : "boolean"
        },
        "customerProfileId" : {
          "description" : "Gets or sets the customer profile.",
          "type" : "string"
        }
      }
    },
    "CustomerProfileResponse" : {
      "description" : "A customer profile response.",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/CustomerViewModel",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "CustomerProfileModel" : {
      "description" : "CustomerProfileModel",
      "type" : "object",
      "properties" : {
        "company" : {
          "description" : "The Customer Company",
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "countryCode" : {
          "type" : "string"
        },
        "businessTypeId" : {
          "type" : "string"
        },
        "leadSourceId" : {
          "type" : "string"
        },
        "doNotSolicit" : {
          "type" : "boolean"
        }
      }
    },
    "AddPaymentProfileRequest" : {
      "description" : "An add payment profile request.",
      "type" : "object",
      "properties" : {
        "customerProfileId" : {
          "description" : "Gets or sets the identifier of the customer profile.",
          "type" : "string"
        },
        "nonceToken" : {
          "description" : "Gets or sets the nonce.",
          "type" : "string"
        },
        "email" : {
          "description" : "Gets or sets the email.",
          "type" : "string"
        },
        "defaultPaymentMethod" : {
          "description" : "Gets or sets the default payment method.",
          "type" : "boolean"
        }
      }
    },
    "CustomerPaymentProfile" : {
      "type" : "object",
      "properties" : {
        "paymentProfileId" : {
          "type" : "string"
        },
        "customerProfileId" : {
          "type" : "string"
        },
        "defaultPaymentProfile" : {
          "type" : "boolean"
        },
        "payment" : {
          "$ref" : "#/definitions/MaskedPayment"
        }
      }
    },
    "MaskedPayment" : {
      "type" : "object",
      "properties" : {
        "cardNumber" : {
          "type" : "string"
        },
        "cardType" : {
          "type" : "string"
        },
        "isPaymentToken" : {
          "type" : "boolean"
        },
        "isPaymentTokenSpecified" : {
          "type" : "boolean"
        },
        "expirationDate" : {
          "type" : "string"
        }
      }
    },
    "DeletePaymentProfileRequest" : {
      "description" : "A delete payment profile request.",
      "type" : "object",
      "properties" : {
        "customerProfileId" : {
          "description" : "Gets or sets the identifier of the customer profile.",
          "type" : "string"
        },
        "customerPaymentProfileId" : {
          "description" : "Gets or sets the identifier of the customer payment profile.",
          "type" : "string"
        }
      }
    },
    "PaymentProfileResponse" : {
      "description" : "A payment profile response.",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomerPaymentProfile"
          }
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "CustomerByEmailRequest" : {
      "description" : "Search for customer by email request object",
      "required" : [ "email" ],
      "type" : "object",
      "properties" : {
        "email" : {
          "description" : "Gets or sets Email field to search by.",
          "type" : "string"
        }
      }
    },
    "CustomerResponse" : {
      "description" : "A CustomerDto API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/CustomerDto",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "CustomerDto" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string"
        },
        "contactId" : {
          "type" : "string"
        },
        "companyName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "loginId" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "mobilePhone" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "zipCode" : {
          "type" : "string"
        },
        "status" : {
          "type" : "boolean"
        },
        "memberId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "customerProfileId" : {
          "type" : "string"
        }
      }
    },
    "InvoiceCollectionResponse" : {
      "description" : "A Collection of Invoice API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Invoice"
          }
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "Invoice" : {
      "type" : "object",
      "properties" : {
        "allowReorder" : {
          "type" : "boolean"
        },
        "amtDue" : {
          "format" : "double",
          "type" : "number"
        },
        "blindShipment" : {
          "type" : "boolean"
        },
        "closeOut" : {
          "type" : "boolean"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "custId" : {
          "type" : "string"
        },
        "dueDate" : {
          "format" : "date-time",
          "type" : "string"
        },
        "firmWantFlag" : {
          "type" : "boolean"
        },
        "invoiceContactId" : {
          "type" : "string"
        },
        "invoiceId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "noOfJobs" : {
          "format" : "int32",
          "type" : "integer"
        },
        "notified" : {
          "type" : "boolean"
        },
        "orderId" : {
          "type" : "string"
        },
        "paymentsCloseOut" : {
          "type" : "boolean"
        },
        "ponumber" : {
          "type" : "string"
        },
        "released" : {
          "type" : "string"
        },
        "remarks" : {
          "type" : "string"
        },
        "resources" : {
          "type" : "string"
        },
        "salesTaxAmt" : {
          "format" : "double",
          "type" : "number"
        },
        "sendProductCatalog" : {
          "type" : "boolean"
        },
        "shippingNotes" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "subTotal" : {
          "format" : "double",
          "type" : "number"
        },
        "takenById" : {
          "type" : "string"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "updatedOn" : {
          "format" : "date-time",
          "type" : "string"
        }
      }
    },
    "AccountRepResponse" : {
      "description" : "An AccountRep API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AccountRep",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "AccountRep" : {
      "type" : "object",
      "properties" : {
        "accountManager" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "photoId" : {
          "type" : "string"
        }
      }
    },
    "AddressCollectionResponse" : {
      "description" : "A Collection of AddressDto API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddressDto"
          }
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "AddressDto" : {
      "type" : "object",
      "properties" : {
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "defaultAddress" : {
          "type" : "boolean"
        },
        "email" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "lastName" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "phoneExt" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "zipcode" : {
          "type" : "string"
        }
      }
    },
    "SaveAddressRequest" : {
      "required" : [ "country" ],
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "zipCode" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "phoneExt" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "defaultAddress" : {
          "type" : "boolean"
        }
      }
    },
    "AddressResponse" : {
      "description" : "An Address API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AddressDto",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "MemberCollectionResponse" : {
      "description" : "An API response yielding a collection of Members",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Member"
          }
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "Member" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "merchantKey" : {
          "type" : "string"
        },
        "merchantLogin" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "specialPriceId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "AddMemberRequest" : {
      "description" : "Add Member Request Model",
      "required" : [ "name", "merchantKey", "email" ],
      "type" : "object",
      "properties" : {
        "name" : {
          "description" : "Gets or sets Member Name.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets Member Success Y or N.",
          "type" : "string"
        },
        "specialPriceId" : {
          "description" : "Gets or sets Special Price Id.",
          "type" : "string"
        },
        "merchantLogin" : {
          "description" : "Gets or sets Merchant Login.",
          "type" : "string"
        },
        "merchantKey" : {
          "description" : "Gets or sets Merchant Key.",
          "type" : "string"
        },
        "email" : {
          "description" : "Gets or sets Email.",
          "type" : "string"
        }
      }
    },
    "MemberResponse" : {
      "description" : "An API response yielding a Member",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Member",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "OrderHistoryResponse" : {
      "description" : "A List of Completed OrderHistoryViewModel",
      "type" : "object",
      "properties" : {
        "data" : {
          "description" : "Gets or sets The payload of the response.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderHistoryViewModel"
          }
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "OrderHistoryViewModel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "format" : "int64",
          "type" : "integer"
        },
        "number" : {
          "type" : "string"
        },
        "created" : {
          "format" : "int64",
          "type" : "integer"
        },
        "poNumber" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "hasShipping" : {
          "type" : "boolean"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Item"
          }
        }
      }
    },
    "Item" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "format" : "int64",
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "size" : {
          "type" : "string"
        },
        "productCode" : {
          "type" : "string"
        },
        "productName" : {
          "type" : "string"
        },
        "thumbnail" : {
          "type" : "string"
        },
        "tracking" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tracking"
          }
        },
        "qty" : {
          "format" : "int64",
          "type" : "integer"
        },
        "status" : {
          "type" : "string"
        },
        "isStoppable" : {
          "type" : "boolean"
        }
      }
    },
    "Tracking" : {
      "type" : "object",
      "properties" : {
        "trackingNo" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "address1" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        }
      }
    },
    "StopJobRequest" : {
      "type" : "object",
      "properties" : {
        "jobId" : {
          "type" : "string"
        },
        "reasonId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "reasonText" : {
          "type" : "string"
        }
      }
    },
    "MRMUser" : {
      "description" : "A MarkoRubel Marketing Infusionsoft user.",
      "type" : "object",
      "properties" : {
        "emailAddresses" : {
          "description" : "Gets or sets the email addresses.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MRMEmailAddress"
          }
        },
        "emailOptedIn" : {
          "description" : "Gets or sets a value indicating whether the email opted in.",
          "type" : "boolean"
        },
        "addresses" : {
          "description" : "Gets or sets the addresses.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MRMAddress"
          }
        },
        "lastUpdated" : {
          "format" : "date-time",
          "description" : "Gets or sets the Date/Time of the last updated.",
          "type" : "string"
        },
        "tagIds" : {
          "description" : "Gets or sets a list of identifiers of the tags.",
          "type" : "array",
          "items" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "ownerId" : {
          "format" : "int32",
          "description" : "Gets or sets the identifier that owns this item.",
          "type" : "integer"
        },
        "dateCreated" : {
          "format" : "date-time",
          "description" : "Gets or sets the Date/Time of the date created.",
          "type" : "string"
        },
        "middleName" : {
          "description" : "Gets or sets the person's middle name.",
          "type" : "string"
        },
        "givenName" : {
          "description" : "Gets or sets the name of the given.",
          "type" : "string"
        },
        "emailStatus" : {
          "description" : "Gets or sets the email status.",
          "type" : "string"
        },
        "phoneNumbers" : {
          "description" : "Gets or sets the phone numbers.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MRMPhoneNumber"
          }
        },
        "company" : {
          "description" : "Gets or sets the company.",
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "description" : "Gets or sets the identifier.",
          "type" : "integer"
        },
        "familyName" : {
          "description" : "Gets or sets the name of the family.",
          "type" : "string"
        }
      }
    },
    "MRMEmailAddress" : {
      "description" : "A mrm email address.",
      "type" : "object",
      "properties" : {
        "email" : {
          "description" : "Gets or sets the email.",
          "type" : "string"
        },
        "field" : {
          "description" : "Gets or sets the field.",
          "type" : "string"
        }
      }
    },
    "MRMAddress" : {
      "description" : "A mrm address.",
      "type" : "object",
      "properties" : {
        "line1" : {
          "description" : "Gets or sets the line 1.",
          "type" : "string"
        },
        "line2" : {
          "description" : "Gets or sets the line 2.",
          "type" : "string"
        },
        "locality" : {
          "description" : "Gets or sets the locality.",
          "type" : "string"
        },
        "region" : {
          "description" : "Gets or sets the region.",
          "type" : "string"
        },
        "field" : {
          "description" : "Gets or sets the field.",
          "type" : "string"
        },
        "postalCode" : {
          "description" : "Gets or sets the postal code.",
          "type" : "string"
        },
        "zipCode" : {
          "description" : "Gets or sets the zip code.",
          "type" : "string"
        },
        "zipFour" : {
          "description" : "Gets or sets the zip four.",
          "type" : "string"
        },
        "countyCode" : {
          "description" : "Gets or sets the county code.",
          "type" : "string"
        }
      }
    },
    "MRMPhoneNumber" : {
      "description" : "A mrm phone number.",
      "type" : "object",
      "properties" : {
        "number" : {
          "description" : "Gets or sets the number of.",
          "type" : "string"
        },
        "extension" : {
          "description" : "Gets or sets the extension.",
          "type" : "string"
        },
        "field" : {
          "description" : "Gets or sets the field.",
          "type" : "string"
        },
        "type" : {
          "description" : "Gets or sets the type.",
          "type" : "string"
        }
      }
    },
    "TagContactInfo" : {
      "description" : "The Infusionsoft Contact to Tag with Dynamic Tag",
      "type" : "object",
      "properties" : {
        "contactId" : {
          "format" : "int32",
          "description" : "The infusionsoft contact id",
          "type" : "integer"
        },
        "orderNumber" : {
          "description" : "The PrintSmart Order Number",
          "type" : "string"
        },
        "productName" : {
          "description" : "The MarkoRubel Product Name",
          "type" : "string"
        }
      }
    },
    "CreateTagResponse" : {
      "description" : "InfusionSoft Create Tag Response",
      "type" : "object",
      "properties" : {
        "category" : {
          "$ref" : "#/definitions/TagCategory",
          "description" : "Tag Category for the tag"
        },
        "description" : {
          "description" : "Tag description",
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "description" : "The tag ID",
          "type" : "integer"
        },
        "name" : {
          "description" : "Tag Name",
          "type" : "string"
        }
      }
    },
    "TagCategory" : {
      "description" : "InfusionSoft tag category",
      "type" : "object",
      "properties" : {
        "description" : {
          "description" : "Tag description",
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "description" : "The tag ID",
          "type" : "integer"
        },
        "name" : {
          "description" : "Tag Name",
          "type" : "string"
        }
      }
    },
    "ProductResponse" : {
      "description" : "A ProductViewModel API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ProductViewModel",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "ProductViewModel" : {
      "type" : "object",
      "properties" : {
        "productId" : {
          "type" : "string"
        },
        "productVariation" : {
          "format" : "int64",
          "type" : "integer"
        },
        "chargeCategories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChargeCategory"
          }
        },
        "defaultConfiguration" : {
          "type" : "string"
        },
        "quantities" : {
          "type" : "array",
          "items" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "turnarounds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "productType" : {
          "type" : "string"
        },
        "productLine" : {
          "type" : "string"
        },
        "width" : {
          "format" : "double",
          "type" : "number"
        },
        "height" : {
          "format" : "double",
          "type" : "number"
        },
        "unit" : {
          "type" : "string"
        },
        "safeArea" : {
          "format" : "double",
          "type" : "number"
        },
        "bleed" : {
          "format" : "double",
          "type" : "number"
        },
        "dimensionBoundaries" : {
          "$ref" : "#/definitions/CustomDimensions"
        }
      }
    },
    "CustomDimensions" : {
      "type" : "object",
      "properties" : {
        "minHeight" : {
          "format" : "double",
          "type" : "number"
        },
        "maxHeight" : {
          "format" : "double",
          "type" : "number"
        },
        "minWidth" : {
          "format" : "double",
          "type" : "number"
        },
        "maxWidth" : {
          "format" : "double",
          "type" : "number"
        }
      }
    },
    "ProductVariationResponse" : {
      "description" : "A Product Variation API Response",
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ProductVariation",
          "description" : "Gets or sets The payload of the response."
        },
        "message" : {
          "description" : "Gets or sets Message of the response, maybe be empty.",
          "type" : "string"
        },
        "status" : {
          "description" : "Gets or sets status of the API response.",
          "type" : "string"
        }
      }
    },
    "ProductVariation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "format" : "int64",
          "type" : "integer"
        },
        "productId" : {
          "type" : "string"
        },
        "sku" : {
          "type" : "string"
        },
        "variationData" : {
          "type" : "string"
        },
        "product" : {
          "$ref" : "#/definitions/Product"
        }
      }
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "bleed" : {
          "format" : "double",
          "type" : "number"
        },
        "calcMethodId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "chargeExclusions" : {
          "type" : "string"
        },
        "chargeIds" : {
          "type" : "string"
        },
        "chargeOverrides" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "designer" : {
          "type" : "boolean"
        },
        "dividerLength" : {
          "format" : "double",
          "type" : "number"
        },
        "dividerWidth" : {
          "format" : "double",
          "type" : "number"
        },
        "foldHeight" : {
          "format" : "double",
          "type" : "number"
        },
        "foldWidth" : {
          "format" : "double",
          "type" : "number"
        },
        "friendlyName" : {
          "type" : "string"
        },
        "friendlySize" : {
          "type" : "string"
        },
        "height" : {
          "format" : "double",
          "type" : "number"
        },
        "imageUrl" : {
          "type" : "string"
        },
        "info" : {
          "type" : "string"
        },
        "mandatoryChargeIds" : {
          "type" : "string"
        },
        "maxHeight" : {
          "format" : "double",
          "type" : "number"
        },
        "maxTurnTime" : {
          "format" : "int32",
          "type" : "integer"
        },
        "maxWidth" : {
          "format" : "double",
          "type" : "number"
        },
        "minHeight" : {
          "format" : "double",
          "type" : "number"
        },
        "minTurnTime" : {
          "format" : "int32",
          "type" : "integer"
        },
        "minWidth" : {
          "format" : "double",
          "type" : "number"
        },
        "partNo" : {
          "type" : "string"
        },
        "printType" : {
          "format" : "int32",
          "type" : "integer"
        },
        "prodCatId" : {
          "type" : "string"
        },
        "prodFeatures" : {
          "type" : "string"
        },
        "prodSubCatCode" : {
          "type" : "string"
        },
        "prodSubCatDesc" : {
          "type" : "string"
        },
        "prodSubCatId" : {
          "type" : "string"
        },
        "productionLineId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "productionType" : {
          "type" : "string"
        },
        "quantities" : {
          "type" : "string"
        },
        "rank" : {
          "format" : "int32",
          "type" : "integer"
        },
        "safeArea" : {
          "format" : "double",
          "type" : "number"
        },
        "status" : {
          "type" : "string"
        },
        "taxStatus" : {
          "format" : "int32",
          "type" : "integer"
        },
        "templateId" : {
          "type" : "string"
        },
        "unitId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "updatedOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "vars" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        },
        "width" : {
          "format" : "double",
          "type" : "number"
        },
        "productVariations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductVariation"
          }
        }
      }
    },
    "WorkOrder" : {
      "type" : "object",
      "properties" : {
        "jobId" : {
          "type" : "string"
        },
        "createdOn" : {
          "format" : "date-time",
          "type" : "string"
        },
        "curJLId" : {
          "type" : "string"
        },
        "shippingMethodId" : {
          "type" : "object"
        },
        "orderId" : {
          "type" : "string"
        },
        "recordID" : {
          "format" : "int32",
          "type" : "integer"
        },
        "fdpath" : {
          "type" : "string"
        },
        "bdpath" : {
          "type" : "string"
        },
        "productSubCatId" : {
          "type" : "string"
        },
        "prodSubCatCode" : {
          "type" : "string"
        },
        "shipReq" : {
          "type" : "string"
        },
        "prodQty" : {
          "format" : "int32",
          "type" : "integer"
        },
        "paperTypeId" : {
          "type" : "string"
        },
        "coatingId" : {
          "type" : "string"
        },
        "paperType" : {
          "type" : "string"
        },
        "coating" : {
          "type" : "string"
        },
        "statusId" : {
          "type" : "string"
        },
        "statusDesc" : {
          "type" : "string"
        },
        "printBy" : {
          "format" : "date-time",
          "type" : "string"
        },
        "compBy" : {
          "format" : "date-time",
          "type" : "string"
        },
        "firstJLId" : {
          "type" : "string"
        },
        "orderExists" : {
          "format" : "int32",
          "type" : "integer"
        },
        "imageSource" : {
          "type" : "string"
        },
        "invoiceTitle" : {
          "type" : "string"
        },
        "shippingLabelNotes" : {
          "type" : "string"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "bindaryNotes" : {
          "type" : "string"
        },
        "takenBy" : {
          "type" : "string"
        },
        "height" : {
          "format" : "double",
          "type" : "number"
        },
        "width" : {
          "format" : "double",
          "type" : "number"
        },
        "calcMethodId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "jobTitle" : {
          "type" : "string"
        },
        "flag" : {
          "type" : "boolean"
        },
        "shippingMethod" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "rnAdd" : {
          "type" : "string"
        },
        "proofFrontDesign" : {
          "type" : "object"
        },
        "proofBackDesign" : {
          "type" : "object"
        },
        "printFrontDesign" : {
          "type" : "string"
        },
        "printBackDesign" : {
          "type" : "object"
        },
        "frontThumbUrl" : {
          "type" : "object"
        },
        "backThumbUrl" : {
          "type" : "object"
        },
        "originalFrontDesign" : {
          "type" : "string"
        },
        "originalBackDesign" : {
          "type" : "object"
        },
        "mandChargesIds" : {
          "type" : "string"
        },
        "blindShipment" : {
          "type" : "boolean"
        },
        "bothSidesDesign" : {
          "type" : "boolean"
        },
        "multiPageDesign" : {
          "type" : "boolean"
        },
        "productionDays" : {
          "format" : "int32",
          "type" : "integer"
        },
        "turnaroundType" : {
          "type" : "string"
        },
        "turnaroundDays" : {
          "format" : "int32",
          "type" : "integer"
        },
        "proofStatus" : {
          "format" : "int32",
          "type" : "integer"
        },
        "proofType" : {
          "format" : "int32",
          "type" : "integer"
        },
        "splited" : {
          "type" : "boolean"
        },
        "isAfter5PM" : {
          "type" : "boolean"
        },
        "sample1" : {
          "type" : "object"
        },
        "sample2" : {
          "type" : "object"
        },
        "resources" : {
          "type" : "object"
        },
        "spotUVFront" : {
          "type" : "object"
        },
        "spotUVBack" : {
          "type" : "object"
        },
        "otherJobs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OtherJob"
          }
        },
        "customer" : {
          "$ref" : "#/definitions/CustomerOrderDto"
        }
      }
    },
    "OtherJob" : {
      "type" : "object",
      "properties" : {
        "jobId" : {
          "type" : "string"
        },
        "invoiceId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "title" : {
          "type" : "string"
        },
        "jobLocation" : {
          "type" : "string"
        }
      }
    },
    "CustomerOrderDto" : {
      "type" : "object",
      "properties" : {
        "customerName" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "phoneExt" : {
          "type" : "string"
        },
        "cellPhoneNumber" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "invoiceTitle" : {
          "type" : "string"
        },
        "memberId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "memberName" : {
          "type" : "string"
        }
      }
    }
  }
}